import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load the dataset\ndef load_data():\n    # Simulated dataset for fraud detection\n    data = {'TransactionID': range(1, 101),\n            'Amount': np.random.randint(1, 1000, 100),\n            'IsFraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])}\n    return pd.DataFrame(data)\n\n# Train the model\ndef train_model(data):\n    X = data[['Amount']]\n    y = data['IsFraud']\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Display results\ndef display_results(model, X_test, y_test):\n    y_pred = model.predict(X_test)\n    st.write('Confusion Matrix:')\n    st.write(confusion_matrix(y_test, y_pred))\n    st.write('Classification Report:')\n    st.write(classification_report(y_test, y_pred))\n\n# Visualize data\ndef visualize_data(data):\n    plt.figure(figsize=(10, 5))\n    plt.hist(data['Amount'], bins=20, color='blue', alpha=0.7)\n    plt.title('Transaction Amount Distribution')\n    plt.xlabel('Amount')\n    plt.ylabel('Frequency')\n    plt.grid()\n    st.pyplot()\n\n# Streamlit app\ndef main():\n    st.title('Fraud Detection Case Study')\n    st.write('In this case study, we will explore how to detect fraudulent transactions using machine learning.')\n    data = load_data()\n    st.write(data.head())\n    visualize_data(data)\n    model, X_test, y_test = train_model(data)\n    display_results(model, X_test, y_test)\n    amount_input = st.number_input('Enter Transaction Amount:', min_value=1, max_value=1000)\n    if st.button('Predict Fraud'):\n        prediction = model.predict([[amount_input]])\n        st.write('Fraud Prediction:', 'Fraud' if prediction[0] == 1 else 'Not Fraud')\n\nif __name__ == '__main__':\n    main()\n