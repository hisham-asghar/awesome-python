import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndef load_data():\n    # Simulating a dataset for fraud detection\n    data = {\n        'transaction_id': range(1, 101),\n        'amount': np.random.uniform(10, 1000, 100),\n        'is_fraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])\n    }\n    return pd.DataFrame(data)\n\n# Train model\ndef train_model(data):\n    X = data[['amount']]\n    y = data['is_fraud']\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Main function to run the app\ndef main():\n    st.title('Fraud Detection Case Study')\n    st.write('This application will help you understand how to detect fraudulent transactions.')\n\n    # Load data\n    data = load_data()\n    st.write('Loaded Data:', data)\n\n    # Train model\n    model, X_test, y_test = train_model(data)\n    st.write('Model trained successfully!')\n\n    # User input for prediction\n    amount = st.number_input('Enter transaction amount:', min_value=10.0, max_value=1000.0, value=100.0)\n    if st.button('Predict Fraud'):\n        prediction = model.predict([[amount]])[0]\n        st.write('Prediction:', 'Fraud' if prediction == 1 else 'Not Fraud')\n\n        # Display confusion matrix and classification report\n        y_pred = model.predict(X_test)\n        st.write('Confusion Matrix:', confusion_matrix(y_test, y_pred))\n        st.write('Classification Report:', classification_report(y_test, y_pred))\n\n        # Visualize results\n        plt.figure(figsize=(10, 5))\n        plt.hist(data[data['is_fraud'] == 0]['amount'], bins=20, alpha=0.5, label='Not Fraud')\n        plt.hist(data[data['is_fraud'] == 1]['amount'], bins=20, alpha=0.5, label='Fraud')\n        plt.title('Transaction Amount Distribution')\n        plt.xlabel('Amount')\n        plt.ylabel('Frequency')\n        plt.legend()\n        st.pyplot(plt)\n\nif __name__ == '__main__':\n    main()\n