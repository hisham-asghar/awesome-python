import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndef load_data():\n    # Simulated dataset for fraud detection\n    data = {\n        'TransactionID': range(1, 101),\n        'Amount': np.random.randint(1, 1000, 100),\n        'IsFraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])\n    }\n    return pd.DataFrame(data)\n\n# Train the model\ndef train_model(data):\n    X = data[['Amount']]\n    y = data['IsFraud']\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Display results\ndef display_results(y_test, y_pred):\n    st.subheader('Confusion Matrix')\n    cm = confusion_matrix(y_test, y_pred)\n    st.write(cm)\n    st.subheader('Classification Report')\n    report = classification_report(y_test, y_pred, output_dict=True)\n    st.write(report)\n    st.bar_chart(report['1'])\n\n# Main function to run the Streamlit app\ndef main():\n    st.title('Fraud Detection Case Study')\n    st.write('This app helps you understand fraud detection using machine learning.')\n\n    # Load data\n    data = load_data()\n    st.write(data)\n\n    # Train model\n    model, X_test, y_test = train_model(data)\n    st.write('Model trained!')\n\n    # User input for prediction\n    amount = st.number_input('Enter transaction amount:', min_value=1, max_value=1000)\n    if st.button('Predict Fraud'):\n        prediction = model.predict([[amount]])\n        st.write('Fraud Prediction:', 'Fraud' if prediction[0] == 1 else 'Not Fraud')\n\n    # Evaluate model\n    y_pred = model.predict(X_test)\n    display_results(y_test, y_pred)\n\nif __name__ == '__main__':\n    main()