import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndef load_data():\n    # Simulated dataset for fraud detection\n    data = {\n        'TransactionID': range(1, 101),\n        'Amount': np.random.randint(1, 1000, 100),\n        'IsFraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])\n    }\n    return pd.DataFrame(data)\n\n# Function to train model\ndef train_model(data):\n    X = data[['Amount']]\n    y = data['IsFraud']\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Function to display results\ndef display_results(model, X_test, y_test):\n    y_pred = model.predict(X_test)\n    st.write('Confusion Matrix:')\n    st.write(confusion_matrix(y_test, y_pred))\n    st.write('Classification Report:')\n    st.write(classification_report(y_test, y_pred))\n    st.bar_chart(pd.Series(y_pred).value_counts())\n\n# Streamlit app\ndef main():\n    st.title('Fraud Detection Simulation')\n    st.write('In this case study, we will detect fraudulent transactions using machine learning.')\n\n    # Load data\n    data = load_data()\n    st.write('Dataset Preview:')\n    st.write(data.head())\n\n    # Train model\n    if st.button('Train Model'):\n        model, X_test, y_test = train_model(data)\n        st.success('Model trained successfully!')\n        display_results(model, X_test, y_test)\n\n    # User input for new transaction\n    st.write('### Test a New Transaction')\n    amount = st.number_input('Enter Transaction Amount:', min_value=1, max_value=1000, value=100)\n    if st.button('Predict Fraud'):\n        prediction = model.predict([[amount]])[0] if 'model' in locals() else 'Train the model first!'\n        st.write('Prediction:', 'Fraudulent' if prediction == 1 else 'Not Fraudulent')\n\nif __name__ == '__main__':\n    main()