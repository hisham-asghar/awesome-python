import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Sample dataset for fraud detection\ndata = {\n    'TransactionID': range(1, 101),\n    'Amount': np.random.randint(1, 1000, 100),\n    'IsFraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])\n}\n\ndf = pd.DataFrame(data)\n\n# Streamlit app setup\nst.title('Fraud Detection Case Study')\n\n# User input for tweaking parameters\namount_threshold = st.slider('Select Amount Threshold', 1, 1000, 500)\n\n# Filtering data based on user input\nfiltered_data = df[df['Amount'] > amount_threshold]\n\n# Splitting data for training and testing\nX = filtered_data[['Amount']]\nY = filtered_data['IsFraud']\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)\n\n# Model training\nmodel = RandomForestClassifier()\nmodel.fit(X_train, Y_train)\n\n# Predictions\nY_pred = model.predict(X_test)\n\n# Display results\nst.subheader('Model Performance')\nst.write('Confusion Matrix:')\nst.write(confusion_matrix(Y_test, Y_pred))\nst.write('Classification Report:')\nst.write(classification_report(Y_test, Y_pred))\n\n# Visualization\nplt.figure(figsize=(10, 5))\nplt.hist(filtered_data['Amount'], bins=20, color='blue', alpha=0.7)\nplt.axvline(x=amount_threshold, color='red', linestyle='--')\nplt.title('Transaction Amount Distribution')\nplt.xlabel('Amount')\nplt.ylabel('Frequency')\nplt.grid()\n\nst.pyplot(plt)\n\n# Conclusion\nst.subheader('Conclusion')\nst.write('By adjusting the amount threshold, you can see how it affects the model performance and the distribution of transactions.')\n