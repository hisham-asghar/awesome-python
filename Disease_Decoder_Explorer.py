import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndef load_data():\n    data = pd.read_csv('healthcare_data.csv')  # Replace with your dataset\n    return data\n\n# Preprocess data\ndef preprocess_data(data):\n    # Example preprocessing steps\n    data.fillna(0, inplace=True)  # Fill missing values\n    X = data.drop('disease', axis=1)  # Features\n    y = data['disease']  # Target\n    return X, y\n\n# Train model\ndef train_model(X, y):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Evaluate model\ndef evaluate_model(model, X_test, y_test):\n    y_pred = model.predict(X_test)\n    report = classification_report(y_test, y_pred)\n    cm = confusion_matrix(y_test, y_pred)\n    return report, cm\n\n# Streamlit app\ndef main():\n    st.title('Disease Prediction from Symptoms')\n    st.write('This app predicts diseases based on symptoms using a Random Forest Classifier.')\n\n    # Load and preprocess data\n    data = load_data()\n    X, y = preprocess_data(data)\n\n    # Train model\n    model, X_test, y_test = train_model(X, y)\n\n    # Evaluate model\n    report, cm = evaluate_model(model, X_test, y_test)\n    st.subheader('Model Evaluation')\n    st.text(report)\n    st.write('Confusion Matrix:')\n    st.write(cm)\n\n    # User input for prediction\n    st.subheader('Predict Disease')\n    symptoms = []\n    for feature in X.columns:\n        value = st.number_input(f'Enter value for {feature}:', min_value=0, max_value=10, value=0)\n        symptoms.append(value)\n\n    if st.button('Predict'):\n        prediction = model.predict([symptoms])\n        st.write(f'The predicted disease is: {prediction[0]}')\n\nif __name__ == '__main__':\n    main()\n