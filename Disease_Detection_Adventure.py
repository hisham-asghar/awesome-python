import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndata = pd.read_csv('healthcare_data.csv')  # Replace with your dataset\n\n# Display the dataset\nst.title('Disease Prediction from Symptoms')\nst.write(data.head())\n\n# User input for symptoms\nst.sidebar.header('User Input Symptoms')\nfever = st.sidebar.selectbox('Fever', [0, 1])\ncough = st.sidebar.selectbox('Cough', [0, 1])\nbreathing_difficulty = st.sidebar.selectbox('Breathing Difficulty', [0, 1])\nheadache = st.sidebar.selectbox('Headache', [0, 1])\n\n# Prepare input data\ninput_data = np.array([[fever, cough, breathing_difficulty, headache]])\n\n# Data preprocessing\nX = data.drop('Disease', axis=1)\nY = data['Disease']\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)\n\n# Train the model\nmodel = RandomForestClassifier()\nmodel.fit(X_train, Y_train)\n\n# Make predictions\nprediction = model.predict(input_data)\n\n# Display prediction result\nst.write('Predicted Disease:', prediction[0])\n\n# Evaluate the model\ny_pred = model.predict(X_test)\nconf_matrix = confusion_matrix(Y_test, y_pred)\nreport = classification_report(Y_test, y_pred)\n\n# Display evaluation metrics\nst.subheader('Model Evaluation')\nst.write('Confusion Matrix:')\nst.write(conf_matrix)\nst.write('Classification Report:')\nst.text(report)\n\n# Visualize the results\nplt.figure(figsize=(10, 5))\nplt.bar(['True Positive', 'False Positive', 'True Negative', 'False Negative'], conf_matrix.flatten())\nplt.title('Confusion Matrix Visualization')\nplt.xlabel('Predictions')\nplt.ylabel('Count')\nplt.xticks(rotation=45)\n\nst.pyplot(plt)\n\n# Mini-experiment\nst.sidebar.subheader('Mini Experiment')\nst.sidebar.write('Change symptoms to see how predictions vary!')\n