import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndef load_data():\n    # Simulating a dataset for fraud detection\n    data = {\n        'TransactionID': range(1, 101),\n        'Amount': np.random.randint(1, 1000, 100),\n        'Fraud': np.random.choice([0, 1], 100, p=[0.9, 0.1])\n    }\n    return pd.DataFrame(data)\n\n# Preprocess data\ndef preprocess_data(df):\n    X = df[['Amount']]\n    y = df['Fraud']\n    return train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train model\ndef train_model(X_train, y_train):\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model\n\n# Predict and evaluate\ndef evaluate_model(model, X_test, y_test):\n    predictions = model.predict(X_test)\n    report = classification_report(y_test, predictions)\n    cm = confusion_matrix(y_test, predictions)\n    return report, cm\n\n# Streamlit app\ndef main():\n    st.title('Fraud Detection Case Study')\n    st.write('This app helps you understand how to detect fraudulent transactions.')\n\n    # Load data\n    df = load_data()\n    st.write('### Transaction Data', df)\n\n    # Preprocess data\n    X_train, X_test, y_train, y_test = preprocess_data(df)\n\n    # Train model\n    model = train_model(X_train, y_train)\n    st.write('Model trained successfully!')\n\n    # Evaluate model\n    report, cm = evaluate_model(model, X_test, y_test)\n    st.write('### Classification Report', report)\n    st.write('### Confusion Matrix', cm)\n\n    # User input for new transaction\n    st.write('### Predict Fraud for New Transaction')\n    amount = st.number_input('Enter Transaction Amount:', min_value=1, max_value=1000, value=100)\n    if st.button('Predict'):\n        new_prediction = model.predict([[amount]])\n        st.write('Fraud Prediction:', 'Fraud' if new_prediction[0] == 1 else 'Not Fraud')\n\nif __name__ == '__main__':\n    main()\n