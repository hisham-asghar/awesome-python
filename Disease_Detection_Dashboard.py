import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\ndataset = pd.read_csv('healthcare_data.csv')  # Placeholder for a real dataset\n\n# Function to preprocess data\ndef preprocess_data(data):\n    # Example preprocessing steps\n    data.fillna(0, inplace=True)  # Fill missing values\n    return data\n\n# Function to train model\ndef train_model(X_train, y_train):\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model\n\n# Function to make predictions\ndef make_predictions(model, X_test):\n    return model.predict(X_test)\n\n# Streamlit app setup\nst.title('Healthcare Disease Prediction')\n\n# Sidebar for user input\nst.sidebar.header('User Input Parameters')\n\n# User inputs for symptoms\nfever = st.sidebar.number_input('Fever (0 or 1)', 0, 1)\nheadache = st.sidebar.number_input('Headache (0 or 1)', 0, 1)\ncough = st.sidebar.number_input('Cough (0 or 1)', 0, 1)\n\n# Prepare user input for prediction\nuser_input = np.array([[fever, headache, cough]])\n\n# Preprocess dataset\ndataset = preprocess_data(dataset)\n\n# Split data into features and target\nX = dataset[['fever', 'headache', 'cough']]\ny = dataset['disease']\n\n# Split the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train the model\nmodel = train_model(X_train, y_train)\n\n# Make predictions on the test set\ny_pred = make_predictions(model, X_test)\n\n# Display results\nst.subheader('Model Performance')\nst.text(classification_report(y_test, y_pred))\n\n# Display confusion matrix\ncm = confusion_matrix(y_test, y_pred)\nfig, ax = plt.subplots()\nax.matshow(cm, cmap='Blues')\nst.pyplot(fig)\n\n# Make prediction based on user input\nif st.button('Predict Disease'):\n    prediction = model.predict(user_input)\n    st.subheader('Predicted Disease:')\n    st.write(prediction[0])\n\n# Run the Streamlit app\nif __name__ == '__main__':\n    st.run()