import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport streamlit as st\n\n# Load dataset\n@st.cache\ndef load_data():\n    data = pd.read_csv('healthcare_data.csv')  # Replace with your dataset\n    return data\n\n# Data preprocessing\ndef preprocess_data(data):\n    # Example preprocessing steps\n    data.fillna(0, inplace=True)\n    X = data.drop('disease', axis=1)\n    y = data['disease']\n    return X, y\n\n# Train model\ndef train_model(X, y):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    model = RandomForestClassifier()\n    model.fit(X_train, y_train)\n    return model, X_test, y_test\n\n# Display results\ndef display_results(y_test, y_pred):\n    st.subheader('Confusion Matrix')\n    cm = confusion_matrix(y_test, y_pred)\n    st.write(cm)\n    st.subheader('Classification Report')\n    report = classification_report(y_test, y_pred)\n    st.text(report)\n\n# Main function\ndef main():\n    st.title('Disease Prediction from Symptoms')\n    st.write('This application predicts diseases based on input symptoms.')\n\n    data = load_data()\n    X, y = preprocess_data(data)\n\n    st.sidebar.header('Model Parameters')\n    n_estimators = st.sidebar.slider('Number of Trees in Forest', 1, 100, 10)\n    max_depth = st.sidebar.slider('Max Depth of Tree', 1, 20, 5)\n\n    model, X_test, y_test = train_model(X, y)\n    y_pred = model.predict(X_test)\n\n    display_results(y_test, y_pred)\n\nif __name__ == '__main__':\n    main()\n